// <auto-generated />
using System;
using ControleFrotasDLL.DAL.Database.SQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace WebFrotas.Migrations
{
    [DbContext(typeof(ControleFrotasContext))]
    [Migration("20191108183409_updateRegistro")]
    partial class updateRegistro
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ControleFrotasDLL.BLL.Aluguel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AluguelClienteId");

                    b.Property<int?>("AluguelMotoristaId");

                    b.Property<int?>("AluguelSeguroId");

                    b.Property<int?>("AluguelVeiculoId");

                    b.Property<string>("DadosTransaction");

                    b.Property<string>("DataInicio");

                    b.Property<string>("DataPrevista")
                        .IsRequired();

                    b.Property<string>("FormaPagamento");

                    b.Property<int>("Status");

                    b.Property<string>("TransactionId");

                    b.Property<double>("ValorPrevisto");

                    b.HasKey("Id");

                    b.HasIndex("AluguelClienteId");

                    b.HasIndex("AluguelMotoristaId");

                    b.HasIndex("AluguelSeguroId");

                    b.HasIndex("AluguelVeiculoId");

                    b.ToTable("Alugueis");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.CategoriaVeiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("CategoriaVeiculos");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .IsRequired();

                    b.Property<string>("CEP")
                        .HasMaxLength(10);

                    b.Property<string>("CPFCNPJ")
                        .IsRequired();

                    b.Property<string>("Cidade")
                        .IsRequired();

                    b.Property<string>("Complemento")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Endereco")
                        .IsRequired();

                    b.Property<string>("Estado")
                        .IsRequired();

                    b.Property<string>("Nascimento")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Numero")
                        .IsRequired();

                    b.Property<string>("Senha")
                        .IsRequired();

                    b.Property<string>("Situacao");

                    b.Property<string>("Telefone")
                        .IsRequired();

                    b.Property<string>("Tipo")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.ClienteFisico", b =>
                {
                    b.Property<int?>("ClienteFisicoId");

                    b.Property<string>("CNH")
                        .IsRequired();

                    b.Property<string>("RG")
                        .IsRequired();

                    b.Property<string>("Renach")
                        .IsRequired();

                    b.Property<string>("Sexo")
                        .IsRequired();

                    b.HasKey("ClienteFisicoId");

                    b.ToTable("ClienteFisicos");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.ClienteJuridico", b =>
                {
                    b.Property<int?>("ClienteJuridicoId");

                    b.Property<string>("RazaoSocial")
                        .IsRequired();

                    b.HasKey("ClienteJuridicoId");

                    b.ToTable("ClienteJuridicos");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.Colaborador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<string>("Senha")
                        .IsRequired();

                    b.Property<string>("Tipo");

                    b.HasKey("Id");

                    b.ToTable("Colaboradores");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.Despesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.Property<int?>("DespesaClienteId")
                        .IsRequired();

                    b.Property<int?>("DespesaMedidaId");

                    b.Property<string>("Link")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<double>("PrecoUnitario");

                    b.Property<double>("Quantidade");

                    b.HasKey("Id");

                    b.HasIndex("DespesaClienteId");

                    b.HasIndex("DespesaMedidaId");

                    b.ToTable("Despesas");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.FaturaAluguel", b =>
                {
                    b.Property<int?>("AluguelId");

                    b.Property<string>("DataInicio");

                    b.Property<string>("DataRetorno");

                    b.Property<double>("ValorTotal");

                    b.HasKey("AluguelId");

                    b.ToTable("FaturaAlugueis");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<string>("Telefone")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.ItemsRegistro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DespesaId");

                    b.Property<double>("PrecoUnitario");

                    b.Property<double>("QuantidadeItem");

                    b.Property<int?>("RegistroId");

                    b.HasKey("Id");

                    b.HasIndex("DespesaId");

                    b.HasIndex("RegistroId");

                    b.ToTable("ItemsRegistros");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.Modelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MarcaId");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.ToTable("Modelos");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.Motorista", b =>
                {
                    b.Property<int?>("ClienteMotoristaId");

                    b.Property<string>("CNH")
                        .IsRequired();

                    b.Property<int?>("EmpresaId");

                    b.Property<string>("RG")
                        .IsRequired();

                    b.Property<string>("Renach")
                        .IsRequired();

                    b.Property<string>("Sexo")
                        .IsRequired();

                    b.HasKey("ClienteMotoristaId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Motoristas");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.NewsletterEmail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("NewsletterEmails");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.RegistroDespesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Data")
                        .IsRequired();

                    b.Property<int?>("RegistroClienteId");

                    b.Property<int?>("RegistroMotoristaId")
                        .IsRequired();

                    b.Property<int?>("RegistroVeiculoId");

                    b.Property<double>("Total");

                    b.HasKey("Id");

                    b.HasIndex("RegistroClienteId");

                    b.HasIndex("RegistroMotoristaId");

                    b.HasIndex("RegistroVeiculoId");

                    b.ToTable("RegistrosDespesas");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.RegistroUso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Inicio");

                    b.Property<DateTime>("Prevista");

                    b.Property<int?>("RegistroUsoMotoristaId")
                        .IsRequired();

                    b.Property<int?>("RegistroVeiculoClienteId");

                    b.Property<DateTime>("Retorno");

                    b.Property<string>("Rota")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RegistroUsoMotoristaId");

                    b.HasIndex("RegistroVeiculoClienteId");

                    b.ToTable("RegistrosUsos");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.Seguro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Custo");

                    b.Property<int?>("FornecedorId");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.ToTable("Seguros");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.UnidadeMedida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("UnidadeMedidas");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoriaVeiculoId");

                    b.Property<string>("Link_Foto")
                        .IsRequired();

                    b.Property<int?>("ModeloId");

                    b.Property<string>("Placa")
                        .IsRequired();

                    b.Property<string>("Renavam")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CategoriaVeiculoId");

                    b.HasIndex("ModeloId");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.VeiculoCliente", b =>
                {
                    b.Property<int?>("VeiculoClienteId");

                    b.Property<int?>("ClienteId")
                        .IsRequired();

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.Property<string>("Situacao");

                    b.HasKey("VeiculoClienteId");

                    b.HasIndex("ClienteId");

                    b.ToTable("VeiculosCliente");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.VeiculoEmpresa", b =>
                {
                    b.Property<int?>("VeiculoEmpresaId");

                    b.Property<double>("Preco_Dia");

                    b.Property<int>("Status");

                    b.HasKey("VeiculoEmpresaId");

                    b.ToTable("VeiculosEmpresa");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.Aluguel", b =>
                {
                    b.HasOne("ControleFrotasDLL.BLL.ClienteJuridico", "ClienteJuridico")
                        .WithMany()
                        .HasForeignKey("AluguelClienteId");

                    b.HasOne("ControleFrotasDLL.BLL.Motorista", "Motorista")
                        .WithMany()
                        .HasForeignKey("AluguelMotoristaId");

                    b.HasOne("ControleFrotasDLL.BLL.Seguro", "Seguro")
                        .WithMany()
                        .HasForeignKey("AluguelSeguroId");

                    b.HasOne("ControleFrotasDLL.BLL.VeiculoEmpresa", "VeiculoEmpresa")
                        .WithMany()
                        .HasForeignKey("AluguelVeiculoId");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.ClienteFisico", b =>
                {
                    b.HasOne("ControleFrotasDLL.BLL.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteFisicoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.ClienteJuridico", b =>
                {
                    b.HasOne("ControleFrotasDLL.BLL.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteJuridicoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.Despesa", b =>
                {
                    b.HasOne("ControleFrotasDLL.BLL.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("DespesaClienteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ControleFrotasDLL.BLL.UnidadeMedida", "UnidadeMedida")
                        .WithMany()
                        .HasForeignKey("DespesaMedidaId");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.FaturaAluguel", b =>
                {
                    b.HasOne("ControleFrotasDLL.BLL.Aluguel", "Aluguel")
                        .WithMany()
                        .HasForeignKey("AluguelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.ItemsRegistro", b =>
                {
                    b.HasOne("ControleFrotasDLL.BLL.Despesa", "Despesa")
                        .WithMany()
                        .HasForeignKey("DespesaId");

                    b.HasOne("ControleFrotasDLL.BLL.RegistroDespesa", "RegistroDespesa")
                        .WithMany()
                        .HasForeignKey("RegistroId");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.Modelo", b =>
                {
                    b.HasOne("ControleFrotasDLL.BLL.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.Motorista", b =>
                {
                    b.HasOne("ControleFrotasDLL.BLL.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteMotoristaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ControleFrotasDLL.BLL.ClienteJuridico", "clienteJuridico")
                        .WithMany()
                        .HasForeignKey("EmpresaId");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.RegistroDespesa", b =>
                {
                    b.HasOne("ControleFrotasDLL.BLL.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("RegistroClienteId");

                    b.HasOne("ControleFrotasDLL.BLL.Motorista", "Motorista")
                        .WithMany()
                        .HasForeignKey("RegistroMotoristaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ControleFrotasDLL.BLL.VeiculoCliente", "VeiculoCliente")
                        .WithMany()
                        .HasForeignKey("RegistroVeiculoId");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.RegistroUso", b =>
                {
                    b.HasOne("ControleFrotasDLL.BLL.Motorista", "Motorista")
                        .WithMany()
                        .HasForeignKey("RegistroUsoMotoristaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ControleFrotasDLL.BLL.VeiculoCliente", "VeiculoCliente")
                        .WithMany()
                        .HasForeignKey("RegistroVeiculoClienteId");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.Seguro", b =>
                {
                    b.HasOne("ControleFrotasDLL.BLL.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.Veiculo", b =>
                {
                    b.HasOne("ControleFrotasDLL.BLL.CategoriaVeiculo", "CategoriaVeiculo")
                        .WithMany()
                        .HasForeignKey("CategoriaVeiculoId");

                    b.HasOne("ControleFrotasDLL.BLL.Modelo", "Modelo")
                        .WithMany()
                        .HasForeignKey("ModeloId");
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.VeiculoCliente", b =>
                {
                    b.HasOne("ControleFrotasDLL.BLL.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ControleFrotasDLL.BLL.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoClienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ControleFrotasDLL.BLL.VeiculoEmpresa", b =>
                {
                    b.HasOne("ControleFrotasDLL.BLL.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoEmpresaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
